#include <stdlib.h>
#include <iostream>
using namespace std;

enum tipoUsuario {INVITADO, USUARIO, ADMINISTRADOR};
tipoUsuario tipoUsuarioActual = INVITADO;

// entrada de datos con validacion
float ingresarFloat(string msj);
int ingresarInt(string msj);
string ingresarString(string msj);
bool ingresarBool(string msj);

// menus segun rol
bool cargarMenuInvitado();
bool cargarMenuUsuario();
bool cargarMenuAdministrador();

// operaciones casos de uso
void iniciarSesion();
void altaCine();
void altaFuncion();
void crearReserva();
void puntuarPelicula();
void comentarPelÃ­cula();
void eliminarPelÃ­cula();
void verInfoDePelÃ­cula();
void verComentariosYPuntajeDePelicula();


int main(){
    bool salir = false;
    while (!salir){
        switch (tipoUsuarioActual) {
        case INVITADO:
            salir = cargarMenuInvitado();
            break;
        case USUARIO:
            salir = cargarMenuUsuario();
            break;
        case ADMINISTRADOR:
            salir = cargarMenuAdministrador();
            break;
        }
    }

    return 0;
}


///////////////////////////////////////////////////////////////////////////////////
bool cargarMenuInvitado(){
    int opcion = -1;
    while (opcion != 0){
        system("CLS");
        cout << "---------- Bienvenido a iCinema ---------" << endl;
        cout << "1- Iniciar sesion" << endl;
        cout << "2- Ver Info de PelÃ­cula" << endl;
        cout << "3- Ver comentarios y puntaje de pelicula" << endl;
        cout << "0- Salir..." << endl;
        opcion = ingresarInt("Ingrese una opcion: ");

        switch (opcion) {
        case 1: // Iniciar sesion

            // pongo esto por ahora...
            tipoUsuarioActual = USUARIO;
            return false;
        case 2: // Ver Info de PelÃ­cula
            break;
        case 3: // Ver comentarios y puntaje de pelicula
            break;
        }
    }
    return true;
}
bool cargarMenuUsuario(){
    int opcion = -1;
    while (opcion != 0){
        system("CLS");
        cout << "---------- Bienvenido a iCinema ---------" << endl;
        cout << "1- Crear reserva" << endl;
        cout << "2- Puntuar pelicula" << endl;
        cout << "3- Comentar pelÃ­cula" << endl;
        cout << "4- Ver Info de PelÃ­cula" << endl;
        cout << "5- Ver comentarios y puntaje de pelicula" << endl;
        cout << "0- Salir..." << endl;
        opcion = ingresarInt("Ingrese una opcion: ");

        switch (opcion) {
        case 1: // Crear reserva
            break;
        case 2: // Puntuar pelicula
            break;
        case 3: // Comentar pelÃ­cula
            break;
        case 4: // Ver Info de PelÃ­cula
            break;
        case 5: // Ver comentarios y puntaje de pelicula
            break;
        }
    }
    return true;
}
bool cargarMenuAdministrador(){
    int opcion = -1;
    while (opcion != 0){
        system("CLS");
        cout << "1- Alta cine" << endl;
        cout << "2- Alta funcion" << endl;
        cout << "3- Eliminar pelÃ­cula" << endl;
        cout << "0- Salir..." << endl;
        opcion = ingresarInt("Ingrese una opcion: ");

        switch (opcion) {
        case 1: // Alta cine
            break;
        case 2: // Alta funcion
            break;
        case 3: // Eliminar pelÃ­cula
            break;
        }
    }
    return true;
}


///////////////////////////////////////////////////////////////////////////////////
void iniciarSesion(){

}
void altaCine(){

}
void altaFuncion(){

}
void crearReserva(){

}
void puntuarPelicula(){

}
void comentarPelÃ­cula(){

}
void eliminarPelÃ­cula(){

}
void verInfoDePelÃ­cula(){

}
void verComentariosYPuntajeDePelicula(){

}

///////////////////////////////////////////////////////////////////////////////////
float ingresarFloat(string msj){
    string entrada = "";
    while (true){
        cout << msj;
        getline(cin, entrada);

        if (entrada.length() == 0){
            continue;
        }
        bool ingresoCorrecto = true;
        bool tieneComa = false;
        for (unsigned int i = 0; i < entrada.length(); i++){
            if ((entrada[i] < '0') || (entrada[i] > '9')){
                if (entrada[i] == ',' || entrada[i] == '.'){
                    if(tieneComa){
                        ingresoCorrecto = false;
                        break;
                    }else{
                        entrada[i] = '.';
                        tieneComa = true;
                    }
                }else{
                    ingresoCorrecto = false;
                    break;
                }
            }
        }
        if (ingresoCorrecto){
            break;
        }
    }
    return static_cast<float>(atof(entrada.c_str()));
}
int ingresarInt(string msj){
    string entrada = "";
    while (true){
        cout << msj;
        getline(cin, entrada);

        if (entrada.length() == 0){
            continue;
        }
        bool ingresoCorrecto = true;
        for (unsigned int i = 0; i < entrada.length(); i++){
            if ((entrada[i] < '0') || (entrada[i] > '9')){
                ingresoCorrecto = false;
                break;
            }
        }
        if (ingresoCorrecto){
            break;
        }
    }
    return static_cast<int>(atoi(entrada.c_str()));
}
string ingresarString(string msj){
    string entrada = "";
    cout << msj;
    getline(cin, entrada);

    int inicio = 0;
    int fin = entrada.length()-1;
    for (; inicio < fin+1 && entrada[inicio] == ' '; inicio++);
    for (; fin >= 0 && entrada[fin] == ' '; fin--);

    return entrada.substr(inicio, fin-inicio+1);
}
bool ingresarBool(string msj){
    string afirmaciones[4] = {"s", "S", "si", "SI"};
    string negaciones[4] = {"n", "N", "no", "NO"};
    string entrada = "";

    while (true) {
        cout << msj << "[s/n]: ";
        getline(cin, entrada);
        for (int i=0; i < 4; i++){
            if (afirmaciones[i] == entrada) return true;
        }
        for (int i=0; i < 4; i++){
            if (negaciones[i] == entrada) return false;
        }
    }
}

///////////////////////////////////////////////////////////////////////////////////

